
trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:

  - name: backupFolder
    value: '$(DefaultWorkingDirectory)/backup'
  - name: deploymentFolder
    value: 'C:\SampleAPP'
  - name: appPool
    value: 'AppPool'
  - name: websiteIIS
    value: 'IIS'

stages:
- stage: Backup
  jobs:
  - job: Backup-file
    steps:
    - powershell: |
      #Create bckupfolder if it doesn’t exist.
        if (-not (Test-Path -Path $(backupFolder))) {
          New-Item -ItemType Directory -Path $(backupFolder)
        }
        # Create backup of existing deployment folder.
        Copy-Item -Path $(deploymentFolder) -Destination $(backupFolder) -Recurse -Force
      displayName: 'Backup Deployment Folder'
    - powershell: 'Stop-WebAppPool -Name $(appPool)'
      displayName: 'Stop App Pool'
    - powershell: 'Stop-Website -Name $(websiteIIS)'
      displayName: 'Stop Website'

- stage: Deploy                                                                                    #first Backup stage will run.
  dependsOn: Backup
  jobs:
  - job: DeployJob
    steps:                                                                                                   
    - script: 'dotnet build SimpleAPIln.sln’                                          
      displayName: 'Build the Solution'
    - script: |
        # Replace new DLLs in the Deployment folder
        Remove-Item -Path $(deploymentFolder) -Recurse -Force
        Copy-Item -Path $(System.DefaultWorkingDirectory)/simpleAPIln -Destination $(deploymentFolder) -Recurse
      displayName: 'Deploy to Deployment Folder'
    - powershell: |
        # Restart the app pool and IIS service
        Start-WebAppPool -Name $(appPool)
        Start-Website -Name $(websiteIIS)
      displayName: 'Restart App Pool and Website'

- stage: Rollback                                                                              # fist deploy stage will run.
  dependsOn: Deploy
  jobs:
  - job: Rollback
    steps:
    - powershell: |
        $deploymentSuccess = $true
        if (-not $deploymentSuccess) {
          Remove-Item -Path $(deploymentFolder) -Recurse -Force
          Copy-Item -Path $(backupFolder) -Destination $(deploymentFolder) -Recurse -Force
        }
      displayName: 'Rollback Deployment'
    - powershell: |
        # Restart the app pool and IIS service
        Start-WebAppPool -Name $(appPool)
        Start-Website -Name $(websiteIIS)
      displayName: 'Restart App Pool and Website'
